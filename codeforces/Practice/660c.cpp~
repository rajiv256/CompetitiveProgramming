#include <bits/stdc++.h>

using namespace std ;

typedef vector<int> vi ;
typedef vector<char> vc ;
typedef vector<pair<int,int> > vp ;
typedef vector<vector<pair<int,int> > > vvp  ;
typedef vector<pair<int,pair<int,int> > > vpp ;
typedef vector<bool> vb ;
typedef set<int> si ;
typedef map<int,int> mii ;
typedef map<int,vector<int> > miv ;
typedef unsigned long long ull ;


#define forn(i,n) for(int i = 0; i < n ; i++)
#define vvi vector<vector<int> >
#define pp pair<int,pair<int,int> >
#define sii set<pair<int,int> >
#define pii pair<int,int>
#define INF 1000000000
#define sp " "
#define el "\n"
#define lld long long int
#define rsz(n) resize(n)
#define all(v) v.begin(),v.end()
#define xx first
#define yy second
#define pb push_back
#define sci(x) scanf("%d",&x)
#define mp make_pair
#define MXN 100005
#define MOD 1000000007
#define ll long long

int a[3*MXN] ;

int main(){
    int n, k ;
    sci(n) ; sci(k) ;
    forn(i,n){
        sci(a[i]) ;
    }
    int fl = 1 ; int num1 = 0 ; int num0 =0 ;
    vi v1  ; vi v0 ;
    forn(i,n){
        if (fl==1){
            if (a[i]==1){
                num1 += 1 ;
                continue ;
            }
            if (a[i] == 0){
                v1.pb(num1) ;
                num0 = 1 ;
                fl = 0 ;
                num1 = 0 ;
                continue ;
            }
        }
        else{
            if (a[i] == 0){
                num0 += 1 ;
                continue ;
            }
            if (a[i] == 1){
                num1 = 1 ;
                v0.pb(num0) ;
                fl = 1 ;
                num0 = 0 ;
                continue ;
            }
	}

     }
     cout << num0 << sp << num1 << el ; 	
     if (num1 != 0){
        v1.pb(num1) ;
     }
     if (num0 != 0){
	   v0.pb(num0) ;
     }
    int a0[v0.size()] ;
    int a1[v1.size()] ;
    a0[0] = v0[0];
    a1[0] = v1[0] ;
    for(int i = 1 ; i < v0.size() ; i++){
        a0[i] = a0[i-1]+v0[i] ;
    }
    for (int i = 1; i < v1.size() ; i++){
        a1[i] = a1[i-1]+v1[i] ;
    }
    forn(i,v0.size()){
        cout << a0[i] << sp ;
    }
    cout << el ;
    forn(i,v1.size()){
        cout << a1[i] << sp ;
    }
    cout << el ;
    int ans = INT_MIN ;
    for(int i = 0 ; i < v0.size() ; i++){
        if (i == 0){
	    if (a0[i] > k)
			continue ; 
            int idx ;
            idx = (int)(lower_bound(all(v0),k)-v0.begin());
            if (binary_search(v0.begin(),v0.end(),k)){
                idx += 1 ;
            }
            if (idx < v1.size()){
                int res = a1[idx] ; 
				//if (idx >= 2)
					//res -= a1[idx-2] ; 
				ans = max(ans,res+a0[idx-1]) ; 
			} 
        }
        else{
            int idx ;
	    	if (a0[i] > k+a0[i-1])
				continue ; 
            idx = (int)(lower_bound(all(v0),k+a0[i-1])-v0.begin());
            if (binary_search(v0.begin(),v0.end(),k+a0[i-1])){
                idx += 1 ;
            }
            if (idx < v1.size()){
                int res = a1[idx]-a1[i-1] ; 
				res += a0[idx-1]-a0[i-1] ; 
				ans = max(ans,res) ; 
			}
				
        }
    }
    cout << ans << el ;
    return 0 ;

}
